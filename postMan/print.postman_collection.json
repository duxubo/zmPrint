{
	"info": {
		"_postman_id": "cb7c49db-d030-4f43-8d12-735f0c24f426",
		"name": "print",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"printUrl\", \"http://ois.intelink.net:8003/ois-web\");\r",
							"//pm.globals.set(\"printUrl\", \"http://localhost:8001/web\");\r",
							"pm.globals.set(\"appKey\", \"DGYH7227_YHREN\");\r",
							"pm.globals.set(\"appSecret\", \"641db072272f47td7aew6e1dd026639a\");\r",
							"\r",
							" \r",
							" \r",
							" "
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp=JSON.parse(responseBody)\r",
							"\r",
							"\r",
							"pm.globals.set(\"token\", resp.body.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "appKey",
							"value": "{{appKey}}",
							"type": "text"
						},
						{
							"key": "appSecret",
							"value": "{{appSecret}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{printUrl}}/ois/order/getAuth",
					"host": [
						"{{printUrl}}"
					],
					"path": [
						"ois",
						"order",
						"getAuth"
					]
				}
			},
			"response": []
		},
		{
			"name": "print",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"function sort(unordered){\r",
							"    const ordered = {};\r",
							"    Object.keys(unordered).sort().forEach(function (key) { ordered[key] = unordered[key]; });\r",
							"    return ordered;\r",
							"}\r",
							"// 获取post 请求的表单参数\r",
							"function getPostParams(){\r",
							"    let qa= pm.request.url.query;\r",
							"    let pMap=JSON.parse(JSON.stringify(request.data))\r",
							"    pMap= sort(pMap);\r",
							"    return pMap;\r",
							"}\r",
							"// 获取Get 请求的表单参数\r",
							"function getGetParams(){\r",
							"    let qa= pm.request.url.query;\r",
							"    qa=JSON.parse(JSON.stringify(qa))\r",
							"    let pMap={}\r",
							"    if(qa){\r",
							"        for (let i in qa){\r",
							"            let obj=qa[i];\r",
							"            obj=JSON.parse(JSON.stringify(obj))\r",
							"            let k=obj[\"key\"];\r",
							"            let v=obj[\"value\"];\r",
							"            pMap[k]=v\r",
							"        }\r",
							"    }\r",
							"    pMap= sort(pMap);\r",
							"    return pMap;\r",
							"}\r",
							"var utils={\r",
							"    appKey: pm.globals.get(\"appKey\"),\r",
							"    appSecret:pm.globals.get(\"appSecret\"),\r",
							"    token:pm.globals.get(\"token\"),\r",
							"    ts:new Date().getTime(),\r",
							"    nonce:\"slnkda\",\r",
							"    version:\"1.0\",\r",
							"    camouflageToken:function(){// 伪装token\r",
							"        //2. 将组装token进行Base64. 如：Base64(token)\r",
							"        let calToken='{\"nonce\":\"'+this.nonce+'\",\"timestamp\":'+this.ts+',\"token\":\"'+this.token+'\"}'\r",
							"        console.info(\"计算伪装token json字符串:\"+ calToken);\r",
							"        let kk=CryptoJS.enc.Utf8.parse(calToken)\r",
							"        let tokenStr= CryptoJS.enc.Base64.stringify(kk);\r",
							"        console.info(\"待替换的base64:\"+tokenStr);\r",
							"        // 3. 将 \"a\"->\"-\",\"c\"->\"#\",\"x\"->\"^\",\"M\"->\"$\"字符替换\r",
							"        tokenStr=tokenStr.replaceAll('a','-')\r",
							"        tokenStr=tokenStr.replaceAll('c','#')\r",
							"        tokenStr=tokenStr.replaceAll('x','^')\r",
							"        tokenStr=tokenStr.replaceAll('M','$')\r",
							"        console.info(\"伪装后的token为：\"+tokenStr)\r",
							"        return tokenStr;\r",
							"    },\r",
							"    genSign:function(paramsMap){// 签名计算\r",
							"        paramsMap[\"nonce\"]=this.nonce;\r",
							"        paramsMap[\"timestamp\"]= this.ts;\r",
							"        paramsMap[\"token\"]=this.token;\r",
							"        paramsMap[\"version\"]=this.version;\r",
							"        paramsMap= sort(paramsMap);\r",
							"        console.info(paramsMap);\r",
							"        let pinStr=\"\";\r",
							"        for (let key in paramsMap){\r",
							"            if(pinStr.length > 0){\r",
							"                pinStr=pinStr+\"&\" \r",
							"            }\r",
							"            pinStr=pinStr+(key+\"=\"+paramsMap[key])\r",
							"        }\r",
							"        console.info(\"待计算签名的字符串：\"+pinStr);\r",
							"        let str=CryptoJS.enc.Utf8.parse(pinStr)\r",
							"        let base64Str= CryptoJS.enc.Base64.stringify(str);\r",
							"        let hash = CryptoJS.MD5(base64Str+this.appSecret ).toString().toUpperCase();\r",
							"        console.info(\"签名结果：\"+hash);\r",
							"        return hash;\r",
							"    }\r",
							"}\r",
							"\r",
							"\r",
							"let pMap=getPostParams();\r",
							"let newToken=utils.camouflageToken()\r",
							"let sign=utils.genSign(pMap) \r",
							"pm.globals.set(\"newToken\", newToken);\r",
							"pm.globals.set(\"sign\", sign);\r",
							"pm.globals.set(\"version\", utils.version);\r",
							"pm.globals.set(\"contentType\", \"application/x-www-form-urlencoded\");    \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "{{newToken}}",
						"type": "text"
					},
					{
						"key": "sign",
						"value": "{{sign}}",
						"type": "text"
					},
					{
						"key": "version",
						"value": "{{version}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "body1",
							"value": "\n{\n    \"platformType\":\"ZYXT\",\n        \"referenceno\":\"testCG645-CG078-D911121xx\",\n    \"businessBigType\":\"3\",\n\"cocustomType\":\"1\",\n    \"hubInCode\":\"D-USECRP\",\n    \"pcs\":\"1\",\n    \"weig\":0.05,\n    \"goodsType\":\"\",\n    \"codCharge\":null,\n    \"codChargeCur\":null,\n    \"remark\":null,\n    \"decValueCur\":\"USD\",\n    \"buyerId\":\"\",\n    \"sellerNick\":\"\",\n    \"isReturnsign\":\"N\",\n    \"labelUrl\":\"\",\n    \"insurance\":null,\n    \"insuranceCur\":\"USD\",\n    \"ccPayment\":\"\",\n    \"ccCharge\":null,\n    \"ccChargeCur\":null,\n    \"extra1\":\"\",\n    \"extra2\":\"\",\n    \"extra3\":\"\",\"taxType\": 1,\n    \"extra4\":\"\",\n    \"extra5\":\"\",\n    \"oisInvoices\":[\n        {\n            \"descrName\":\"\\u65f6\\u5c1a\\u9970\\u54c1\",\n            \"eDescrNamee\":\"Fashion jewelry\",\n            \"qty\":\"1\",\n            \"price\":5,\n            \"unit\":\"PCE\",\n            \"hsCode\":\"7117190000\",\n            \"origin\":\"\",\n            \"uses\":\"\",\n            \"material\":\"\",\n            \"brand\":\"\",\n            \"sku\":\"AS100226\",\n            \"transactionUrl\":\"\",\n            \"remark\":\"\",\n            \"nWeig\":\"0.050\",\n            \"unitWeig\":\"0.050\",\n            \"include\":\"AS100226\",\n            \"pcs\":\"1\",\n            \"childJobno\": \"CHILDJOB1,CHILDJO2,CHILDJ3\",\n\"pcsActual\": 55,\n\"pcsgweig\": 22,\n\"pcslength\": 1,\n\"pcswidth\": 22,\n\"pcsheight\": 5\n        }\n    ],\n    \"reName\":\"SHARON DIAMOND\",\n    \"reCompany\":\"\",\n    \"reTel\":\"+1 918 991 9472\",\n    \"retel2\":\"+1 918 991 9472\",\n    \"reCountryCode\":\"US\",\n    \"reCountry\":\"US\",\n    \"reAddr\":\"314 E. 1st Street\",\n    \"reAddr2\":\"\",\n    \"reAddr3\":\"\",\n    \"reHouseNo\":\"\",\n    \"reZip\":\"74017\",\n    \"reState\":\"Oklahoma\",\n    \"reCity\":\"Claremore\",\n    \"reEmail\":\"sharondiamond31@gmail.com\",\n    \"reCode\":\"\",\n    \"sdName\":\"DIDADI\",\n    \"sdCompany\":\"DIDADI LOGISTICS TECH LIMITED\",\n    \"sdTel\":\"00000000000\",\n    \"sdAddr\":\"LONGANGRoom 101, F, Quan Shunxiang\",\n    \"sdCountry\":\"CN\",\n    \"sdCountryCode\":\"CN\",\n    \"sdState\":\"GUANGDONG\",\n    \"sdCity\":\"SHENZHEN\",\n    \"sdZip\":\"518000\",\n    \"sdEmail\":\"\"\n}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "body1",
							"value": "{\n\t\"platformType\": \"ZYXT\",\n\t\"referenceno\": \"D2112069274\",\n\t\"refno\": \"\",\n\t\"hubInCode\": \"D-USEXRP-T\",\n\t\"pcs\": \"1\",\n\t\"weig\": 0.454,\n\t\"goodsType\": \"\",\n\t\"codCharge\": null,\n\t\"codChargeCur\": null,\n\t\"remark\": null,\n\t\"decValueCur\": \"USD\",\n\t\"buyerId\": \"\",\n\t\"sellerNick\": \"\",\n\t\"isReturnsign\": \"N\",\n\t\"labelUrl\": \"\",\n\t\"insurance\": null,\n\t\"insuranceCur\": \"USD\",\n\t\"ccPayment\": \"\",\n\t\"ccCharge\": null,\n\t\"ccChargeCur\": null,\n\t\"extra1\": \"\",\n\t\"extra2\": \"\",\n\t\"extra3\": \"\",\n\t\"extra4\": \"\",\n\t\"extra5\": \"\",\n\t\"oisInvoices\": [{\n\t\t\"descrName\": \"\\u6a21\\u5177\",\n\t\t\"eDescrNamee\": \"Mold\",\n\t\t\"qty\": \"1\",\n\t\t\"price\": 18.99,\n\t\t\"unit\": \"PCE\",\n\t\t\"hsCode\": \"\",\n\t\t\"origin\": \"\",\n\t\t\"uses\": \"\",\n\t\t\"material\": \"\",\n\t\t\"brand\": \"\",\n\t\t\"sku\": \"2709772\",\n\t\t\"transactionUrl\": \"\",\n\t\t\"remark\": \"\",\n\t\t\"nWeig\": \"0.308\",\n\t\t\"unitWeig\": \"0.308\",\n\t\t\"include\": \"\",\n\t\t\"pcs\": \"1\"\n\t}],\n\t\"pieces\": [{\n\t\t\"actual\": \"0.309\",\n\t\t\"length\": 1,\n\t\t\"width\": 1,\n\t\t\"height\": 1\n\t}],\n\t\"reName\": \"SRS 2021 \\\"Home For The Holidays\\\" Toy Drive Dusenbu\",\n\t\"reCompany\": \"\",\n\t\"reTel\": \"2818528451\",\n\t\"retel2\": \"2818528451\",\n\t\"reCountryCode\": \"US\",\n\t\"reCountry\": \"US\",\n\t\"reAddr\": \"1824 Sawdust Rd\",\n\t\"reAddr2\": \"Ste 2\",\n\t\"reAddr3\": \"\",\n\t\"reHouseNo\": \"\",\n\t\"reZip\": \"77380\",\n\t\"reState\": \"TX\",\n\t\"reCity\": \"Spring\",\n\t\"reEmail\": \"\",\n\t\"reCode\": \"\",\n\t\"sdName\": \"DIDADI\",\n\t\"sdCompany\": \"DIDADI LOGISTICS TECH LIMITED\",\n\t\"sdTel\": \"00000000000\",\n\t\"sdAddr\": \"Nanwan street19A, block B, wanguocheng, No.9 Pinglang Road, Pingji Avenueshanglilang community\",\n\t\"sdCountry\": \"CN\",\n\t\"sdCountryCode\": \"CN\",\n\t\"sdState\": \"GUANGDONG\",\n\t\"sdCity\": \"SHENZHEN\",\n\t\"sdZip\": \"518000\",\n\t\"sdEmail\": \"\"\n}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "body1",
							"value": "{\"platformType\":\"ZYXT\",\"referenceno\":\"testxD21121381362\",\"refno\":\"\",\"hubInCode\":\"D-USEXRP-PQ\",\"pcs\":\"1\",\"weig\":0.209,\"goodsType\":\"\",\"codCharge\":null,\"codChargeCur\":null,\"remark\":null,\"decValueCur\":\"USD\",\"buyerId\":null,\"sellerNick\":\"\",\"isReturnsign\":\"N\",\"labelUrl\":\"\",\"insurance\":null,\"insuranceCur\":\"USD\",\"ccPayment\":\"\",\"ccCharge\":null,\"ccChargeCur\":null,\"extra1\":\"\",\"extra2\":\"\",\"extra3\":\"\",\"extra4\":\"\",\"extra5\":\"\",\"oisInvoices\":[{\"descrName\":\"\\u5fae\\u7f29\\u5c0f\\u8d2d\\u7269\\u8f66\",\"eDescrNamee\":\"Kids Role Play\",\"qty\":\"1\",\"price\":18.65,\"unit\":\"PCE\",\"hsCode\":\"95030060\",\"origin\":\"\",\"uses\":\"\",\"material\":\"\",\"brand\":\"\",\"sku\":\"57016229\",\"transactionUrl\":\"\",\"remark\":\"\",\"nWeig\":0.186,\"unitWeig\":0.186,\"include\":\"\",\"pcs\":\"1\"}],\"pieces\":[{\"actual\":\"0.209\",\"length\":\"38.0\",\"width\":\"25.0\",\"height\":\"7.0\"}],\"reName\":\"Lori Michaelson\",\"reCompany\":\"\",\"reTel\":\"6038015138\",\"retel2\":\"6038015138\",\"reCountryCode\":\"US\",\"reCountry\":\"US\",\"reAddr\":\"14 St Mary Dr\",\"reAddr2\":\"\",\"reAddr3\":\"\",\"reHouseNo\":\"\",\"reZip\":\"03051\",\"reState\":\"NH\",\"reCity\":\"Hudson\",\"reEmail\":\"\",\"reCode\":\"\",\"sdName\":\"DIDADI\",\"sdCompany\":\"DIDADI LOGISTICS TECH LIMITED\",\"sdTel\":\"00000000000\",\"sdAddr\":\"Nanwan street19A, block B, wanguocheng, No.9 Pinglang RoadPingji Avenue, shanglilang community\",\"sdCountry\":\"CN\",\"sdCountryCode\":\"CN\",\"sdState\":\"GUANGDONG\",\"sdCity\":\"SHENZHEN\",\"sdZip\":\"518000\",\"sdEmail\":\"\"}\n",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{printUrl}}/ois/order/createOrder",
					"host": [
						"{{printUrl}}"
					],
					"path": [
						"ois",
						"order",
						"createOrder"
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrder",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"function sort(unordered){\r",
							"    const ordered = {};\r",
							"    Object.keys(unordered).sort().forEach(function (key) { ordered[key] = unordered[key]; });\r",
							"    return ordered;\r",
							"}\r",
							"// 获取post 请求的表单参数\r",
							"function getPostParams(){\r",
							"    let qa= pm.request.url.query;\r",
							"    let pMap=JSON.parse(JSON.stringify(request.data))\r",
							"    pMap= sort(pMap);\r",
							"    return pMap;\r",
							"}\r",
							"// 获取Get 请求的表单参数\r",
							"function getGetParams(){\r",
							"    let qa= pm.request.url.query;\r",
							"    qa=JSON.parse(JSON.stringify(qa))\r",
							"    let pMap={}\r",
							"    if(qa){\r",
							"        for (let i in qa){\r",
							"            let obj=qa[i];\r",
							"            obj=JSON.parse(JSON.stringify(obj))\r",
							"            let k=obj[\"key\"];\r",
							"            let v=obj[\"value\"];\r",
							"            pMap[k]=v\r",
							"        }\r",
							"    }\r",
							"    pMap= sort(pMap);\r",
							"    return pMap;\r",
							"}\r",
							"var utils={\r",
							"    appKey: pm.globals.get(\"appKey\"),\r",
							"    appSecret:pm.globals.get(\"appSecret\"),\r",
							"    token:pm.globals.get(\"token\"),\r",
							"    ts:new Date().getTime(),\r",
							"    nonce:\"slnkda\",\r",
							"    version:\"1.0\",\r",
							"    camouflageToken:function(){// 伪装token\r",
							"        //2. 将组装token进行Base64. 如：Base64(token)\r",
							"        let calToken='{\"nonce\":\"'+this.nonce+'\",\"timestamp\":'+this.ts+',\"token\":\"'+this.token+'\"}'\r",
							"        console.info(\"计算伪装token json字符串:\"+ calToken);\r",
							"        let kk=CryptoJS.enc.Utf8.parse(calToken)\r",
							"        let tokenStr= CryptoJS.enc.Base64.stringify(kk);\r",
							"        console.info(\"待替换的base64:\"+tokenStr);\r",
							"        // 3. 将 \"a\"->\"-\",\"c\"->\"#\",\"x\"->\"^\",\"M\"->\"$\"字符替换\r",
							"        tokenStr=tokenStr.replaceAll('a','-')\r",
							"        tokenStr=tokenStr.replaceAll('c','#')\r",
							"        tokenStr=tokenStr.replaceAll('x','^')\r",
							"        tokenStr=tokenStr.replaceAll('M','$')\r",
							"        console.info(\"伪装后的token为：\"+tokenStr)\r",
							"        return tokenStr;\r",
							"    },\r",
							"    genSign:function(paramsMap){// 签名计算\r",
							"        paramsMap[\"nonce\"]=this.nonce;\r",
							"        paramsMap[\"timestamp\"]= this.ts;\r",
							"        paramsMap[\"token\"]=this.token;\r",
							"        paramsMap[\"version\"]=this.version;\r",
							"        paramsMap= sort(paramsMap);\r",
							"        console.info(paramsMap);\r",
							"        let pinStr=\"\";\r",
							"        for (let key in paramsMap){\r",
							"            if(pinStr.length > 0){\r",
							"                pinStr=pinStr+\"&\" \r",
							"            }\r",
							"            pinStr=pinStr+(key+\"=\"+paramsMap[key])\r",
							"        }\r",
							"        console.info(\"待计算签名的字符串：\"+pinStr);\r",
							"        let str=CryptoJS.enc.Utf8.parse(pinStr)\r",
							"        let base64Str= CryptoJS.enc.Base64.stringify(str);\r",
							"        let hash = CryptoJS.MD5(base64Str+this.appSecret ).toString().toUpperCase();\r",
							"        console.info(\"签名结果：\"+hash);\r",
							"        return hash;\r",
							"    }\r",
							"}\r",
							"\r",
							"\r",
							"let pMap=getPostParams();\r",
							"let newToken=utils.camouflageToken()\r",
							"let sign=utils.genSign(pMap) \r",
							"pm.globals.set(\"newToken\", newToken);\r",
							"pm.globals.set(\"sign\", sign);\r",
							"pm.globals.set(\"version\", utils.version);\r",
							"pm.globals.set(\"contentType\", \"application/x-www-form-urlencoded\");    \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "{{newToken}}",
						"type": "text"
					},
					{
						"key": "sign",
						"value": "{{sign}}",
						"type": "text"
					},
					{
						"key": "version",
						"value": "{{version}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "body1",
							"value": "{\n    \"platformType\":\"ZYXT\",\n    \"referenceno\":\"testCG645-CG078-D922222\",\n    \"refno\":\"\",\n   \"hubInCode\":\"测试(D-EUTKRP-L)\",\n    \"pcs\":1,\n    \"weig\":1.2,\n    \"remark\":\"\",\n    \"reName\":\"David Gomez\",\n    \"reTel\":\"+1 (480) 270-0703\",\n    \"reAddr\":\"11015 Malden Dr,Houston TX\",\n    \"reCountryCode\":\"US\",\n    \"reState\":\"HX\",\n    \"reCity\":\"Houston TX\",\n    \"reZip\":\"77075-5154\",\n    \"reCode\":\"\",\n    \"decValueCur\":\"USD\",\n    \"oisInvoices\":[\n        {\n            \"descrName\":\"hhh\",\n            \"eDescrNamee\":\"Shirt\",\n            \"qty\":6,\n            \"price\":8,\n            \"hsCode\":\"\",\n            \"sku\":\"衬衫CG645-CG078-D9\",\n            \"remark\":\"\"\n        }\n    ],\n    \"sdName\":\"hello\",\n    \"sdTel\":\"18726399157\",\n    \"sdAddr\":\"qeqweqweqweq\",\n    \"sdCountry\":\"CN\",\n    \"sdState\":\"安徽\",\n    \"sdCity\":\"合肥市\",\n    \"sdZip\":\"230000\",\n    \"isReturnsign\":\"N\",\n    \"ccPayment\":\"PP\",\n    \"codCharge\":0,\n    \"codChargeCur\":\"\",\n    \"taxNoList\":[\n        {\n            \"issuerCountryCode\":\"FR\",\n            \"no\":\"re1233\",\n            \"owner\":\"re\",\n            \"source\":\"print\",\n            \"type\":\"VAT\"\n        },\n        {\n            \"issuerCountryCode\":\"FR\",\n            \"no\":\"re2233\",\n            \"owner\":\"re\",\n            \"source\":\"print\",\n            \"type\":\"EOR\"\n        },\n        {\n            \"issuerCountryCode\":\"FR\",\n            \"no\":\"sd1233\",\n            \"owner\":\"sd\",\n            \"source\":\"print\",\n            \"type\":\"VAT\"\n        },\n        {\n            \"issuerCountryCode\":\"FR\",\n            \"no\":\"sd2233\",\n            \"owner\":\"sd\",\n            \"source\":\"print\",\n            \"type\":\"EOR\"\n        }\n    ]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{printUrl}}/ois/order/createOrder",
					"host": [
						"{{printUrl}}"
					],
					"path": [
						"ois",
						"order",
						"createOrder"
					]
				}
			},
			"response": []
		},
		{
			"name": "getLabel",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"function sort(unordered){\r",
							"    const ordered = {};\r",
							"    Object.keys(unordered).sort().forEach(function (key) { ordered[key] = unordered[key]; });\r",
							"    return ordered;\r",
							"}\r",
							"// 获取post 请求的表单参数\r",
							"function getPostParams(){\r",
							"    let qa= pm.request.url.query;\r",
							"    let pMap=JSON.parse(JSON.stringify(request.data))\r",
							"    pMap= sort(pMap);\r",
							"    return pMap;\r",
							"}\r",
							"// 获取Get 请求的表单参数\r",
							"function getGetParams(){\r",
							"    let qa= pm.request.url.query;\r",
							"    qa=JSON.parse(JSON.stringify(qa))\r",
							"    let pMap={}\r",
							"    if(qa){\r",
							"        for (let i in qa){\r",
							"            let obj=qa[i];\r",
							"            obj=JSON.parse(JSON.stringify(obj))\r",
							"            let k=obj[\"key\"];\r",
							"            let v=obj[\"value\"];\r",
							"            pMap[k]=v\r",
							"        }\r",
							"    }\r",
							"    pMap= sort(pMap);\r",
							"    return pMap;\r",
							"}\r",
							"var utils={\r",
							"    appKey: pm.globals.get(\"appKey\"),\r",
							"    appSecret:pm.globals.get(\"appSecret\"),\r",
							"    token:pm.globals.get(\"token\"),\r",
							"    ts:new Date().getTime(),\r",
							"    nonce:\"slnkda\",\r",
							"    version:\"1.0\",\r",
							"    camouflageToken:function(){// 伪装token\r",
							"        //2. 将组装token进行Base64. 如：Base64(token)\r",
							"        let calToken='{\"nonce\":\"'+this.nonce+'\",\"timestamp\":'+this.ts+',\"token\":\"'+this.token+'\"}'\r",
							"        console.info(\"计算伪装token json字符串:\"+ calToken);\r",
							"        let kk=CryptoJS.enc.Utf8.parse(calToken)\r",
							"        let tokenStr= CryptoJS.enc.Base64.stringify(kk);\r",
							"        console.info(\"待替换的base64:\"+tokenStr);\r",
							"        // 3. 将 \"a\"->\"-\",\"c\"->\"#\",\"x\"->\"^\",\"M\"->\"$\"字符替换\r",
							"        tokenStr=tokenStr.replaceAll('a','-')\r",
							"        tokenStr=tokenStr.replaceAll('c','#')\r",
							"        tokenStr=tokenStr.replaceAll('x','^')\r",
							"        tokenStr=tokenStr.replaceAll('M','$')\r",
							"        console.info(\"伪装后的token为：\"+tokenStr)\r",
							"        return tokenStr;\r",
							"    },\r",
							"    genSign:function(paramsMap){// 签名计算\r",
							"        paramsMap[\"nonce\"]=this.nonce;\r",
							"        paramsMap[\"timestamp\"]= this.ts;\r",
							"        paramsMap[\"token\"]=this.token;\r",
							"        paramsMap[\"version\"]=this.version;\r",
							"        paramsMap= sort(paramsMap);\r",
							"        console.info(paramsMap);\r",
							"        let pinStr=\"\";\r",
							"        for (let key in paramsMap){\r",
							"            if(pinStr.length > 0){\r",
							"                pinStr=pinStr+\"&\" \r",
							"            }\r",
							"            pinStr=pinStr+(key+\"=\"+paramsMap[key])\r",
							"        }\r",
							"        console.info(\"待计算签名的字符串：\"+pinStr);\r",
							"        let str=CryptoJS.enc.Utf8.parse(pinStr)\r",
							"        let base64Str= CryptoJS.enc.Base64.stringify(str);\r",
							"        let hash = CryptoJS.MD5(base64Str+this.appSecret ).toString().toUpperCase();\r",
							"        console.info(\"签名结果：\"+hash);\r",
							"        return hash;\r",
							"    }\r",
							"}\r",
							"\r",
							"\r",
							"let pMap=getGetParams();\r",
							"let newToken=utils.camouflageToken()\r",
							"let sign=utils.genSign(pMap) \r",
							"pm.globals.set(\"newToken\", newToken);\r",
							"pm.globals.set(\"sign\", sign);\r",
							"pm.globals.set(\"version\", utils.version);\r",
							"pm.globals.set(\"contentType\", \"application/x-www-form-urlencoded\");    \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{newToken}}",
						"type": "text"
					},
					{
						"key": "sign",
						"value": "{{sign}}",
						"type": "text"
					},
					{
						"key": "version",
						"value": "{{version}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{printUrl}}/ois/order/getLabel?orderId=427226&printType=LABEL",
					"host": [
						"{{printUrl}}"
					],
					"path": [
						"ois",
						"order",
						"getLabel"
					],
					"query": [
						{
							"key": "orderId",
							"value": "427226"
						},
						{
							"key": "printType",
							"value": "LABEL"
						}
					]
				}
			},
			"response": []
		}
	]
}
